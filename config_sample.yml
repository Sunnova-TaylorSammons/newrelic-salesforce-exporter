integration_name: com.newrelic.labs.sfdc.eventlogfiles
run_as_service: False
cron_interval_minutes: 60
service_schedule: { "hour":  "*", "minute": "0,15,30,45" }
instances:
  - name: sfdc-logs
    arguments:
      token_url: "https://test.salesforce.com/services/oauth2/token"
      auth: {
        "grant_type": "password",
        "client_id": "",
        "client_secret": "",
        "username": "",
        "password": ""
      }
      auth_env_prefix: "MY_"
      cache_enabled: False
      redis: {
        "host": "",
        "port": "",
        "db_number": 0,
        "password": "",
        "ssl": True,
        "expire_days": 2
      }
      date_field: "LogDate"
      generation_interval: "Hourly"
      time_lag_minutes: 300
    labels:
      environment: production
queries: [
  {
    query: "SELECT Id,EventType,CreatedDate,LogDate,LogFile,Interval FROM EventLogFile WHERE CreatedDate>={from_timestamp} AND EventType='API' AND Interval='{log_interval_type}'"
  },
  {
    query: "SELECT Id,Action,CreatedDate,DelegateUser,Display FROM SetupAuditTrail WHERE CreatedDate>={from_timestamp}",
    timestamp_attr: CreatedData,
    rename_timestamp: actualTimestamp,
    api_ver: "58.0"
  },
  {
    query: "SELECT EventName, EventType, UsageType, Client, Value, StartDate, EndDate FROM PlatformEventUsageMetric WHERE TimeSegment='FifteenMinutes' AND StartDate >= {start_date} AND EndDate <= {end_date}",
    env: {
      end_date: "now()",
      start_date: "now(timedelta(minutes=-60))"
    },
    api_ver: "58.0",
    timestamp_attr: StartDate,
  }
]
newrelic:
  data_format: "events"
  api_endpoint: "US"
  account_id: ""
  license_key: ""

